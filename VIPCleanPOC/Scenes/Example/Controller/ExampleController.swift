//
//  ExampleController.swift
//  VIPCleanPOC
//
//  Created by Mohamed Hisham on 10/11/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects
//

import Foundation

class ExampleController: ExampleControllerProtocol {
    
    //MARK: Dependiences
    var interactor: ExampleInteractorProtocol
    // The interactor is the entity responsible of firing the network calls
    
    //MARK: Coordinator callback closure
    //to aggregate a navigation action to the coordinator to be excuted there
    var callback: ExampleControllerCallback
    
    init(interactor: ExampleInteractorProtocol, callback: @escaping ExampleControllerCallback) {
        self.interactor = interactor
        self.callback = callback
    }
    //MARK: Controller has a refrence from the view as a protocol to be able to display content on
    weak var view: ExampleViewProtocol? {
        didSet {
            view?.callback = processViewCallback()
        }
    }
    
    func displayOnView(viewModel: ExampleViewModelProtocol) {
        view?.display(viewModel: viewModel)
    }
}

private extension ExampleController {
    
    //View callback function
    func processViewCallback() -> ExampleViewCallback {
        
        return {[weak self] type in
            guard let self = self else { return }
            switch type {
            case .back:
                break
            case .sumbit(mobile: let mobile):
                self.interactor.fetchUser(with: mobile)
            case .navigate:
                self.callback(.navigateToChild)
            }
        }
    }
}
